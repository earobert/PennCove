{
    "contents" : "#--- Review\n\n#--- Homework feedback\n\n#--- Possum data\npossum <- read.csv(file=\"possum.csv\") \nhead(possum,n=3) \npar(mfrow = c(2,3))#numrow,numcolumbscan't call within individual plot command because \n#mfrow Fills in by row\n#mfcol fills in by column\n#Tufte's rules\n#maximize the data:ink ratio\n#erase non-data ink\n#increase the data density (ex. make plot small)\n#label the figures, avoid using legends\n#Rather than A,B,C... use actual text i.e. USA data\n\n#Space can be optimized by modifying margins around each plot\n#Space around the outside each plot individually\npar(mar = c(bottom, left, top, right))\n#Space around the entire figure\npar(oma = c(bottom, left, top, right)) #Increase values to add axes labels\n#remove x-axis xaxt = \"n\"\n#add text individual plot mtext(text = \"...\", side=T, line = 3)\n#add text outside mtext (... outer=T)\n\npdf(file=\"Rplot.pdf\",8.5,11)\npar(mfcol=c(2,3))\npar(mar = c(0, 0, 0, 0))\npar(oma = c(5, 5, 4, 2)+.1)\nplot(possum$totlngth, possum$footlgth,xaxt=\"n\")\nmtext(text=\"Foot length (cm)\",side = 2, line=3)\ntext(x=77,y=75, \"foot\",xpd=T) #xpd = NA allows you to plot outside the boundary of the plot\nplot(possum$totlngth, possum$hdlngth)\nmtext(text=\"Head length (cm)\",side = 2, line=3)\nmtext(text=\"Total length (cm)\",side = 1, line=3)\nplot(possum$skullw,   possum$footlgth,xaxt=\"n\",yaxt=\"n\")\nplot(possum$skullw,   possum$hdlngth,yaxt=\"n\")\nmtext(text=\"Skull width (cm)\",side = 1, line=3)\nplot(possum$chest,    possum$footlgth,xaxt=\"n\",yaxt=\"n\")\nplot(possum$chest,    possum$hdlngth,yaxt=\"n\")\nmtext(text=\"Chest girth (cm)\",side = 1, line=3)\ndev.off()\nlocator(1)\n?text\n\n#Customized layout \nlayout(mat, widths, heights, ...)\n?mat\n\n#Simple arrangement\nmat <- matrix(c( 1, 2, 3, 4, 5,\n                 6, 7, 8, 9,10,\n                 11,12,13,14,15), \n              nrow=3, ncol=5, byrow=T)\n#Will plot backwards starting with 15?\n#Widths and heights will be all different sizes, specified by widths and heights\n#0's mean don't plot anything\nlayout(mat=mat, widths = c(1,3,5,1,3),     \n       heights = c(2,2,1) )\nlayout.show(n=15)\n\n#Complex arrangement - 1's are all one plot, 2's are all another plot\nmat <- matrix(c( 1, 1, 3, 4, 5,\n                 1, 1, 3, 6, 7,\n                 2, 2, 2, 2, 7), \n              nrow=3, ncol=5, byrow=T)\n\nlayout(mat=mat, widths = c(1,3,5,1,3),\n       heights = c(2,2,1) )\n\nlayout.show(n=7)\n\n#Clear the plots after layout()\n#Closes all graphics\ngraphics.off()\ncatches <- read.csv(\"FAO catch.csv\") \nnames(catches) \nboxplot(catches$TL~catches$Habitat)#Plot trophic levels as a function by the corresponding habitat\n\n#Are things higher in the food web if they are bigger?\n#Note, size is log'ed using log=\"y\"\nboxplot(catches$Lmax~catches$TL,log=\"y\", \n        col=\"darkgreen\", xlab=\"Trophic level\",\n        ylab=\"Maximum length (cm)\")\n#Bin by rounding:\nboxplot(catches$Lmax~round(catches$TL,1),log=\"y\", \n        col=\"darkgreen\", xlab=\"Trophic level\",\n        ylab=\"Maximum length (cm)\")\n\nVADeaths\nbarplot(VADeaths, legend=TRUE, ylab=\"Death rate\") \nbarplot(VADeaths, legend=TRUE, ylab=\"Death rate\", beside=TRUE)\nbarplot(t(VADeaths), legend=TRUE, ylab=\"Death rate\", beside=TRUE, args.legend=list(x=\"topleft\")) \n#Plot horizonally horiz=T\nbarplot(t(VADeaths), legend=TRUE, ylab=\"Death rate\", beside=TRUE, args.legend=list(x=\"bottomright\"), horiz=T)\n\n#---- Exercise 2\niris\nnames(iris)\n?mtext\npar(mfrow=c(1,2))\nboxplot(iris$Petal.Length~iris$Species,col=\"royalblue1\") \n#boxplot(Petal.Length~Species,data=iris) also works\nmtext(\"Petal length\", side=3,line=0)\nboxplot(iris$Petal.Width~iris$Species, col=\"royalblue1\")\nmtext(\"Petal width\", side=3,line=0)\ntext(x=1,y=2.0,\"Blah\")\n#Note - main will also work... \n\ngraphics.off()\niris\nnames(iris)\n#Convert columns to treatments\nSL<-data.frame(\n  treat = rep(\"Sepal.Length\",length(iris$Sepal.Length)),\n  value = iris$Sepal.Length\n  )\nSW<-data.frame(\n  treat = rep(\"Sepal.Width\",length(iris$Sepal.Width)),\n  value = iris$Sepal.Width\n)\nPL<-data.frame(\n  treat = rep(\"Petal.Length\",length(iris$Petal.Length)),\n  value = iris$Petal.Length\n)\nPW<-data.frame(\n  treat = rep(\"Petal.Width\",length(iris$Petal.Width)),\n  value = iris$Petal.Width\n)\nnewIris=rbind(PL,PW,SL,SW) #benefit - doesn't graph alphabetically\nnames(newIris)\nboxplot(value~treat,data=newIris)\n#alternative way - just make vectors and then make a dataframe out of the vectors\nc(vector1, vector2)...\n\n#fancy pants way\nmeasure <- rep(names(iris[1:4],each=nrow(iris)))\ndata <- c(iris[1],iris[,2],iris[,3],iris[,4])\nlength(measure)\nlength(data)\nnewiris <- data.fram(measure,data)\nnewiris\nboxplot(data~measure,data=newiris)",
    "created" : 1479867625869.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3749382214",
    "id" : "4E8D1F16",
    "lastKnownWriteTime" : 1445890839,
    "path" : "~/Documents/Software/R/Intro_to_R/Class_work_Intro/8.More_complex_graphs.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "type" : "r_source"
}