{
    "contents" : "# To do:\n# combine 1m and 7m into 1 dataframe given date... this will help make better graphs... \n# I installed a new pH sensor around 9/1\n\n# Packages required:\ninstall.packages(\"data.table\")\ninstall.packages(\"plotly\")\n\nlibrary(data.table)\nlibrary(plotly)\n\n# This will \n# 1. import the .dat files for 1m and 7m\n# 2. perform quality control for the data\n# 3. plot the data (may call a separate function)\n# 4. create an index of mussel \"happiness\" (2 spp 2 depths)\n# 5. graph the index of mussel \"happiness\"\n# 6. graph will be uploaded to website\n\n\n#====\n# To upload from file on computer\n#====\ndf <- read.table(file = \"1m.txt\", header = T, sep = \",\", skip = 1, stringsAsFactors = FALSE)\nhead(df)\ndim(df)\ndf.unit <- df[1,]\ndf.data <- df[3:nrow(df),]\nhead(df.data)\nhead(df.unit)\ndf.data_1m <- df.data\n\ndf <- read.table(file = \"7m.txt\", header = T, sep = \",\", skip = 1, stringsAsFactors = FALSE)\nhead(df)\ndim(df)\ndf.unit <- df[1,]\ndf.data <- df[3:nrow(df),]\nhead(df.data)\nhead(df.unit)\ndf.data_7m <- df.data\n#====\n\n# #====\n# # To upload from internet (slower but can be RT)\n# #====\n# # Use library(data.table)\n# df <- fread(\"http://www.penncoveshellfish.com/water_data/UW_Radio_UWTable1.dat\", header = T, sep = \",\", skip = 1, stringsAsFactors = FALSE)\n# head(df)\n# dim(df)\n# df.unit <- df[1,]\n# df.data <- df[3:nrow(df),]\n# head(df.data)\n# head(df.unit)\n# df.data_1m <- df.data\n# \n# df <- fread(\"http://www.penncoveshellfish.com/water_data/UW_Radio_UWTable3.dat\", header = T, sep = \",\", skip = 1, stringsAsFactors = FALSE)\n# head(df)\n# dim(df)\n# df.unit <- df[1,]\n# df.data <- df[3:nrow(df),]\n# head(df.data)\n# head(df.unit)\n# df.data_7m <- df.data\n# #====\n\n#====\n#Structure the data\n#====\ndata_structure <- function (df.data) {\n  head(df.data) \n  df.data[,1] <- as.POSIXct(as.character(df.data[,1]), format = \"%Y-%m-%d %H:%M:%S\", origin = \"1960-01-01\")\n  for ( i in 2:ncol(df.data)) {\n    df.data[,i] <- as.numeric(df.data[,i])\n  }\n  return(df.data)\n}\n\ndf.data_1m <- df.data\n\ndf.data_1m <- data_structure(df.data_1m)\nstr(df.data_1m)\nhead(df.data_1m)\ndim(df.data_1m)\n\ndf.data_7m <- data_structure(df.data_7m)\nstr(df.data_7m)\nhead(df.data_1m)\ndim(df.data_1m)\n\n\n#====\n#Preliminary plot of temp data\n#====\nplot(df.data_1m$TIMESTAMP,df.data_1m$TempC, pch = 1)\npoints(df.data_7m$TIMESTAMP, df.data_7m$TempC, col = \"grey\", pch = 1)\n\n#====\n# Quality control based on unrealistic temperature data (assume all data temp sensitive)\n#====\ndf.data_7m[df.data_7m$TempC<5,c(\"TIMESTAMP\", \"TempC\")]\nhead(df.data_7m[df.data_7m$TempC>100 & !is.na(df.data_7m$TempC),c(\"TIMESTAMP\", \"TempC\")])\ndf.data_7m[df.data_7m$TempC>14 & !is.na(df.data_7m$TempC),c(\"TIMESTAMP\", \"TempC\")]\n\ndf.data_7m$TempC[df.data_7m$TIMESTAMP >= as.POSIXct(\"2015-04-01 01:00:00\") & df.data_7m$TIMESTAMP <= as.POSIXct(\"2015-06-10 01:00:00\")] <- 0\ndf.data_7m$TempC[df.data_7m$TIMESTAMP >= as.POSIXct(\"2015-02-04 01:00:00\") & df.data_7m$TIMESTAMP <= as.POSIXct(\"2015-02-06 01:00:00\")] <- 0\ndf.data_7m$TempC[df.data_7m$TIMESTAMP >= as.POSIXct(\"2015-02-23 01:00:00\") & df.data_7m$TIMESTAMP <= as.POSIXct(\"2015-02-25 01:00:00\")] <- 0\n\ndf.data_7m[df.data_7m$TempC <= 0, c(\"Temp\", \"TempC\", \"Cond\", \"SpCond\", \"Sal\", \"BGAPERFU\",\"BGAPEug\",\"ChlRFU\",\"Chlug\",\"pH\", \"DOpct\", \"DOmgl\", \"ODOlocal\")] <- NA\n\ndf.data_1m[df.data_1m$TempC<1,c(\"TIMESTAMP\", \"TempC\")]\ndf.data_1m$TempC[df.data_1m$TIMESTAMP >= as.POSIXct(\"2014-08-13 01:00:00\") & df.data_1m$TIMESTAMP <= as.POSIXct(\"2014-08-15 01:00:00\")] <- 0\ndf.data_1m[df.data_1m$TempC <= 1, c(\"Temp\",\"TempC\", \"Cond\", \"SpCond\", \"Sal\", \"BGAPERFU\",\"BGAPEug\",\"ChlRFU\",\"Chlug\",\"pH\", \"DOpct\", \"DOmgl\", \"ODOlocal\")] <- NA\n#c(\"Temp\", \"Cond\", \"SpCond\", \"Sal\", \"BGAPERFU\",\"BGAPEug\",\"ChlRFU\",\"Chlug\",\"pH\", \"DOpct\", \"DOmgl\", \"ODOlocal\")\n\n#====\n# Quality control based on unrealistic pHm DO or Sal data (Sal may affect pH, DO meas... but actually Emily said no, may affect saturation calcs)\n#====\ndf.data_1m[df.data_1m$pH>10,c(\"TIMESTAMP\", \"pH\")]\ndf.data_1m$pH[df.data_1m$TIMESTAMP >= \"2015-07-06\" & df.data_1m$TIMESTAMP <= \"2015-07-23\"] <- NA\n\ndf.data_1m[df.data_1m$pH<6.5,c(\"TIMESTAMP\", \"pH\")]\ndf.data_1m$pH[df.data_1m$TIMESTAMP >= \"2014-08-13\" & df.data_1m$TIMESTAMP <= \"2014-08-15\"] <- NA\ndf.data_1m$pH[df.data_1m$TIMESTAMP >= \"2015-07-05\" & df.data_1m$TIMESTAMP <= \"2015-08-27\"] <- NA\n\ndf.data_1m[df.data_1m$DOmgl<.5,c(\"TIMESTAMP\", \"DOmgl\")]\ndf.data_1m$DOmgl[df.data_1m$TIMESTAMP >= \"2015-07-01\" & df.data_1m$TIMESTAMP <= \"2015-08-06\"] <- NA\ndf.data_1m$DOpct[df.data_1m$TIMESTAMP >= \"2015-07-01\" & df.data_1m$TIMESTAMP <= \"2015-08-06\"] <- NA\ndf.data_1m$ODOlocal[df.data_1m$TIMESTAMP >= \"2015-07-01\" & df.data_1m$TIMESTAMP <= \"2015-08-06\"] <- NA\n\ndf.data_1m[df.data_1m$Sal>35,c(\"TIMESTAMP\", \"Sal\")]\ndf.data_1m$Sal[df.data_1m$TIMESTAMP >= \"2014-08-06\" & df.data_1m$TIMESTAMP <= \"2014-08-15\"] <- 0\ndf.data_1m$Sal[df.data_1m$TIMESTAMP >= \"2015-06-08\" & df.data_1m$TIMESTAMP <= \"2015-06-10\"] <- 0\ndf.data_1m[df.data_1m$Sal<5,c(\"TIMESTAMP\")]\ndf.data_1m$Sal[df.data_1m$TIMESTAMP >= \"2015-06-09\" & df.data_1m$TIMESTAMP <= \"2015-07-06\"] <- 0\n\ndf.data_1m$Sal[df.data_1m$Sal <= 0 ] <- NA\ndf.data_1m$Cond[df.data_1m$Sal <= 0 ] <- NA\ndf.data_1m$ODOlocal[df.data_1m$Sal <= 0] <- NA\ndf.data_1m$DOpct[df.data_1m$Sal <= 0] <- NA\ndf.data_1m$DOmgl[df.data_1m$Sal <= 0] <- NA\n\nhead(df.data_1m)\nstr(df.data_1m)\n\n#====\n# Combine 1m and 7m dataframes by timestamp\n#====\ndf.all <- merge(x = df.data_1m,y = df.data_7m, by.x = \"TIMESTAMP\", by.y = \"TIMESTAMP\", suffixes = c(\"_1m\",\"_7m\"))\nhead(df.all)\n\n\n#====\n# Plots\n#====\n#temp\nplot(df.all$TIMESTAMP,df.all$TempC_1m, col = \"blue\", pch = 21, cex = .2, ylab = \"Temp deg C\")\npoints(df.all$TIMESTAMP,df.all$TempC_7m, col = \"black\", pch = 21, cex = .2)\n\n# DOmg/l \nplot(df.data_1m$TIMESTAMP,df.data_1m$DOmgl, col = \"blue\", ylab = \"DO mg/L\", pch = 21, cex = .2, ylim = c(0,20))\npoints(df.data_7m$TIMESTAMP, df.data_7m$DOmgl, col = \"black\", pch = 21, cex = .2)\ndf.data_1m[df.data_1m$DOmgl<.5,c(\"TIMESTAMP\", \"DOmgl\")]\n\n#DO % sat local\nplot(df.data_1m$TIMESTAMP,df.data_1m$ODOlocal, col = \"blue\", pch = 21, cex = .2, ylab = \"% Sat local\", \n     ylim = c(0,200), xlab = \"Date\")\npoints(df.data_7m$TIMESTAMP, df.data_7m$ODOlocal, col = \"black\", pch = 21, cex = .2)\n\n# df.data_7m_new <- df.data_7m[df.data_7m$TIMESTAMP >= \"2016-09-01\",]\n# df.data_1m_new <- df.data_1m[df.data_1m$TIMESTAMP >= \"2016-09-01\",]\n# head(df.data_7m_new)\n\ndf.all_new <- df.all[df.all$TIMESTAMP >= \"2016-09-01\",]\nhead(df.all_new)\n\nplot(df.data_7m$pH, df.data_7m$ODOlocal, pch = 21, cex = .2, xlab = \"pH\", ylab = \"Dissolved oxygen, % sat local\")\npoints(df.data_1m$pH, df.data_1m$ODOlocal, col = \"blue\", pch = 21, cex = .2)\npoints(df.data_1m_new$pH, df.data_1m_new$ODOlocal, col = \"yellow\", pch = 21, cex = .2)\npoints(df.data_7m_new$pH, df.data_7m_new$ODOlocal, col = \"orange\", pch = 21, cex = .2)\nlegend(x = \"topleft\", legend = c(\"1m since 2014\", \"7m since 2014\", \"1m since Sep 2016\", \"7m since Sep 2016\"), pch = 19, cex = 1, col = c(\"blue\", \"black\", \"yellow\", \"orange\"))\n\nplot(df.data_7m$pH, df.data_7m$DOmgl, pch = 21, cex = .2, xlab = \"pH\", ylab = \"Dissolved oxygen, mg/L\")\npoints(df.data_1m$pH, df.data_1m$DOmgl, col = \"blue\", pch = 21, cex = .2)\npoints(df.data_1m_new$pH, df.data_1m_new$DOmgl, col = \"yellow\", pch = 21, cex = .2)\npoints(df.data_7m_new$pH, df.data_7m_new$DOmgl, col = \"orange\", pch = 21, cex = .2)\nlegend(x = \"topleft\", legend = c(\"1m since 2014\", \"7m since 2014\", \"1m since Sep 2016\", \"7m since Sep 2016\"), pch = 19, cex = 1, col = c(\"blue\", \"black\", \"yellow\", \"orange\"))\n\nstrat_index <- df.all$TempC_1m - df.all$TempC_7m\nstrat_index_new <- df.all_new$TempC_1m - df.all_new$TempC_7m\n\npar(mfrow = c(1,2))\nplot(strat_index, df.all$ODOlocal_7m, pch = 21, cex = .2, xlab = \"Stratification index\", ylab = \"Dissolved oxygen, % sat local\")\npoints(strat_index, df.all$ODOlocal_1m, col = \"blue\", pch = 21, cex = .2)\npoints(strat_index_new, df.all_new$ODOlocal_1m, col = \"yellow\", pch = 21, cex = .2)\npoints(strat_index_new, df.all_new$ODOlocal_7m, col = \"orange\", pch = 21, cex = .2)\nlegend(x = \"topleft\", legend = c(\"1m since 2014\", \"7m since 2014\", \"1m since Sep 2016\", \"7m since Sep 2016\"), pch = 19, cex = 1, col = c(\"blue\", \"black\", \"yellow\", \"orange\"))\n\nplot(strat_index, df.all$pH_7m, pch = 21, cex = .2, xlab = \"Stratification index\", ylab = \"pH\")\npoints(strat_index, df.all$pH_1m, col = \"blue\", pch = 21, cex = .2)\npoints(strat_index_new, df.all_new$pH_1m, col = \"yellow\", pch = 21, cex = .2)\npoints(strat_index_new, df.all_new$pH_7m, col = \"orange\", pch = 21, cex = .2)\nlegend(x = \"topleft\", legend = c(\"1m since 2014\", \"7m since 2014\", \"1m since Sep 2016\", \"7m since Sep 2016\"), pch = 19, cex = 1, col = c(\"blue\", \"black\", \"yellow\", \"orange\"))\n\n\n\nplot(df.data_1m$TIMESTAMP,df.data_1m$DOpct, col = \"green\", pch = \".\", ylab = \"DO pct\")\npoints(df.data_7m$TIMESTAMP, df.data_7m$DOpct, col = \"blue\", pch = \".\")\n\nplot(df.data_1m$TIMESTAMP,df.data_1m$ODOlocal, col = \"green\", pch = \".\", ylab = \"DO local\")\npoints(df.data_7m$TIMESTAMP, df.data_7m$ODOlocal, col = \"blue\", pch = \".\")\n\n# pH\nplot(df.data_1m$TIMESTAMP,df.data_1m$pH, col = \"green\", pch = \".\", ylim = c(6.5,9), ylab = \"pH\")\npoints(df.data_7m$TIMESTAMP, df.data_7m$pH, col = \"blue\", pch = \".\")\n\n\nnight_1m <- df.data_1m[(strftime(df.data_1m$TIMESTAMP, format = \"%H:%M:%S\"))==\"02:00:00\",]\nday_1m <- df.data_1m[(strftime(df.data_1m$TIMESTAMP, format = \"%H:%M:%S\"))==\"14:00:00\",]\nnight_7m <- df.data_7m[(strftime(df.data_7m$TIMESTAMP, format = \"%H:%M:%S\"))==\"02:00:00\",]\nday_7m <- df.data_7m[(strftime(df.data_7m$TIMESTAMP, format = \"%H:%M:%S\"))==\"14:00:00\",]\n\n# Night and day... not super different - change in pH may have to do with water body exchange and tides\nplot(night_1m$TIMESTAMP,night_1m$pH, col = \"blue\", pch = 1, ylim = c(6.5,9), ylab = \"pH\")\npoints(day_1m$TIMESTAMP, day_1m$pH, col = \"light green\", pch = 1)\nplot(night_7m$TIMESTAMP,night_7m$pH, col = \"dark blue\", pch = 21, ylim = c(6.5,9), ylab = \"pH\")\npoints(day_7m$TIMESTAMP, day_7m$pH, col = \"dark green\", pch = 21)\n\nplot(night_1m$Sal,night_1m$pH, col = \"blue\", pch = 1, ylim = c(6.5,9), ylab = \"pH\")\npoints(day_1m$Sal, day_1m$pH, col = \"light green\", pch = 1)\n\nplot(night_1m$TempC,night_1m$pH, col = \"blue\", pch = 1, ylim = c(6.5,9), ylab = \"pH\")\npoints(day_1m$TempC, day_1m$pH, col = \"light green\", pch = 1)\n\nplot(night_1m$Sal,night_1m$TempC, col = \"blue\", pch = 1)\npoints(day_1m$Sal, day_1m$TempC, col = \"light green\", pch = 1)\n\n# Chl\nplot(df.data_1m$TIMESTAMP,log(df.data_1m$Chlug+10), col = \"green\", pch = \".\", ylab = \"Log of chlorophyll (ug/L)\")\npoints(df.data_7m$TIMESTAMP, log(df.data_7m$Chlug+10), col = \"blue\", pch = \".\")\n# I'm not sure about the most recent peak and also the drop of 2 in 2015\n\n# Salinity\nplot(df.data_1m$TIMESTAMP,df.data_1m$Sal, col = \"green\", pch = 1, cex = .2, ylab = \"Salinity\")\npoints(df.data_7m$TIMESTAMP, df.data_7m$Sal, col = \"blue\", pch = 1, cex = .2)\n# The most recent drop in salinity at depth is probably in error (why would it be stratified that way?) Clean sensor head. \n\n#====\n# Temp response index - dummy functions (Actual functions can be obtained from Fly and Hilbish)\n# 1m: gallo\nx <- df.data_1m$TempC\nm <- 6/20\nb <- -2\ny <- m * x + b #Should be 5 pt curve, and actual growth should depend inversely with si\nplot(df.data_1m$TIMESTAMP, y, col = \"light green\", pch = \".\", ylab = \"Temperature response index (SFG J/h)\", ylim = c(-1,5))\n\n# 1m: tross\nx <- df.data_1m$TempC\nm <- -2/20\nb <- 1\ny <- m * x + b #Should be 5 pt curve, and actual growth should depend inversely with si\npoints(df.data_1m$TIMESTAMP, y, col = \"light grey\", pch = \".\")\n\n# 7m: gallo\nx <- df.data_7m$TempC\nm <- 6/20\nb <- -2\ny <- m * x + b #Should be 5 pt curve, and actual growth should depend inversely with si\npoints(df.data_7m$TIMESTAMP, y, col = \"dark green\", pch = \".\")\n\n# 7m: tross\nx <- df.data_7m$TempC\nm <- -2/20\nb <- 1\ny <- m * x + b #Should be 5 pt curve, and actual growth should depend inversely with si\npoints(df.data_7m$TIMESTAMP, y, col = \"black\", pch = \".\")\n\nlegend(x = \"topleft\",legend = c(\"1m gallo\", \"7m gallo\", \"1m tross\", \"7m tross\"),\n       col = c(\"light green\", \"dark green\", \"light grey\", \"black\") , pch = 21)\n\n#==== \n# DO response index - dummy index\nplot(df.data_1m$TIMESTAMP,log(df.data_1m$ODOlocal), col = \"green\", pch = \".\", ylab = \"DO local\")\npoints(df.data_7m$TIMESTAMP, log(df.data_7m$ODOlocal), col = \"blue\", pch = \".\")\n\n# 1m: gallo\nx <- log(df.data_1m$ODOlocal)\nm <- 1\nb <- -4\ny <- m * x + b #Should be 5 pt curve, and actual growth should depend inversely with si\nplot(df.data_1m$TIMESTAMP, y, col = \"light green\", pch = \".\", ylab = \"DO response index\")\n\n# 1m: tross\nx <- log(df.data_1m$ODOlocal)\nm <- 1\nb <- -4\ny <- m * x + b #Should be 5 pt curve, and actual growth should depend inversely with si\npoints(df.data_1m$TIMESTAMP, y, col = \"light grey\", pch = \".\")\n\n# 7m: gallo\nx <- log(df.data_7m$ODOlocal)\nm <- 1\nb <- -4\ny <- m * x + b #Should be 5 pt curve, and actual growth should depend inversely with si\npoints(df.data_7m$TIMESTAMP, y, col = \"dark green\", pch = \".\")\n\n# 7m: tross\nm <- 1\nb <- -4\ny <- m * x + b #Should be 5 pt curve, and actual growth should depend inversely with si\npoints(df.data_7m$TIMESTAMP, y, col = \"black\", pch = \".\")\n\nlegend(x = \"topleft\",legend = c(\"1m gallo\", \"7m gallo\", \"1m tross\", \"7m tross\"),\n       col = c(\"light green\", \"dark green\", \"light grey\", \"black\") , pch = 21)\n\n# Salinity response index - gallo does less well at lower salinities\n\n# Make graphs and publish them online under my plot_ly account. \n# They are currently set as private but I can then embed them or get a URL for them.\nSys.setenv(\"plotly_username\"=\"earobert\")\nSys.setenv(\"plotly_api_key\"=\"zk2ecjk0js\")\nplot <- plot_ly(data = df.data_1m, x = ~TIMESTAMP, y = ~TempC, color = I(\"black\"))\nplotly_POST(x = plot, filename = \"Temp\", fileopt = \"new\", sharing = \"private\")\n\n#====\n# Graph is at URL: https://plot.ly/~earobert/1/tempc-vs-timestamp/\n\n\n",
    "created" : 1476408603506.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1196885441",
    "id" : "F8BC8FD",
    "lastKnownWriteTime" : 1480476546,
    "path" : "~/Documents/School and jobs/UW Biology/Research/Penn_Cove_monitoring/projects/SONDE_data/SONDE_data/SONDE_graphs.R",
    "project_path" : "SONDE_graphs.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}